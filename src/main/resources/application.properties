#
#spring.datasource.url=jdbc:postgresql://localhost:5432/IotAnalyser
#spring.datasource.username=postgres
#spring.datasource.password=0000
#
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#
#
openweathermap.api.key=${OPENWEATHERMAP_API_KEY:84b2221fb299c9649673758febaed6f8}
jwt.secret=${JWT_SECRET}

jwt.expiration=86400

# App name
spring.application.name=IotAnalyser

# Active profile -> always use H2 for hosting
spring.profiles.active=h2

# Server port (can be overridden by env var)
server.port=${PORT:8083}
management.server.port=${PORT:8083}

# Logging
logging.level.org.springframework.security=DEBUG
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
simulator.enabled=true
simulator.device-count=3
simulator.sensor-types=TEMPERATURE,HUMIDITY,MOTION
simulator.data-push-interval=2000

simulator.injection.anomaly-probability=0.2
simulator.injection.disconnect-probability=0.1
simulator.injection.reconnect-probability=0.5

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

simulator.server-url=${SIMULATOR_SERVER_URL:http://localhost:8083/ws-sensor-data}

# --- CORRECTED CORS SETTINGS ---
# Allow requests from both the deployed Vercel URL and the local Docker environment
spring.web.cors.allowed-origin-patterns=https://iot-analyser-react-frontend.vercel.app,http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
# Apply CORS rules to all endpoints to include /device, /sensor, etc.
spring.web.cors.mapping=/**
